#Entrada

#Uma das maneiras que existem de receber valores em nossos programas Ã© atravÃ©s da funÃ§Ã£o input, que vem embutida na prÃ³pria linguagem. Esta funÃ§Ã£o estÃ¡ vinculada Ã  entrada padrÃ£o do sistema operacional e tem como parÃ¢metro opcional o prompt que, caso seja fornecido, exibirÃ¡ a mensagem passada para ele em tela. O valor recebido atravÃ©s da funÃ§Ã£o serÃ¡ do tipo texto (str):

input("Digite uma mensagem:")

#O programa permanece parado atÃ© que algum dado seja fornecido. Isto pode ser feito digitando algum conteÃºdo, teclando Enter, ou podemos tambÃ©m ter os dados redirecionados de um arquivo ou outra fonte. Veja um exemplo de um programa com entrada de dados fornecido pela pessoa usuÃ¡ria:

import random

random_number = random.randint(1, 10)  # escolhe um nÃºmero aleatÃ³rio entre 1 e 10
guess = ""

while guess != random_number:  # enquanto nÃ£o adivinhar o nÃºmero
    guess = int(input("Qual o seu palpite? "))  # pergunte a pessoa usuÃ¡ria um nÃºmero

print("O nÃºmero sorteado era: ", guess)

#ğŸ’¡ Fazemos uma conversÃ£o do palpite para um nÃºmero inteiro, pois entrada de dados Ã© sempre str.

#ğŸ’¡ Para rodar o exemplo acima, nÃ£o crie um arquivo chamado random para inserir o cÃ³digo, pois o mÃ³dulo que estamos importando se chama random e isso pode causar um erro! Lembre-se que, para rodar o cÃ³digo, vocÃª deve executar o comando python3 nome_do_arquivo.py no terminal.

#Outra maneira de recebermos valores externos na execuÃ§Ã£o de nossos programas Ã© utilizando o mÃ³dulo sys. Quando executamos um script e adicionamos parÃ¢metros, os mesmos estarÃ£o disponÃ­veis atravÃ©s de uma variÃ¡vel chamada sys.argv, que Ã© preenchida sem que precisemos fazer nada. Na prÃ¡tica, podemos escrever o conteÃºdo abaixo em um arquivo e passar alguns parÃ¢metros ao executÃ¡-lo.

import sys


if __name__ == "__main__":
    for argument in sys.argv:
        print("Received -> ", argument)

#Podemos executar o cÃ³digo usando os parÃ¢metros atravÃ©s do comando abaixo:
#python3 arquivo.py 2 4 "teste"

#A saÃ­da serÃ¡:

#Received ->  arquivo.py
#Received ->  2
#Received ->  4
#Received ->  teste

